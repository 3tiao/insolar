kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: bootstrap-config
  labels:
    app: bootstrap
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "2Gi"

---

apiVersion: v1
kind: Service
metadata:
  name: bootstrap
  labels:
    app: bootstrap
spec:
  ports:
  - port: 8080
    name: prometheus
  - port: 7900
    name: network
    protocol: TCP
  - port: 19191
    name: api
    protocol: TCP
  clusterIP: None
  selector:
    app: bootstrap

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: seed-config
data:
  insolar.yaml: |
    ledger:
      storage:
        datadirectory: /opt/insolar/data
    log:
      level: Debug
    keyspath: "/opt/insolar/config/bootstrap_keys.json"
  genesis.yaml: |
    root_keys_file: "/opt/insolar/config/root_member_keys.json"
    root_balance: 1000000000
    majority_rule: 0
    min_roles:
      virtual:  1
      heavy_material: 1
      light_material: 1
    pulsar_public_keys:
      - "pulsar_public_key"
    discovery_nodes:
      -
        host: "seed-0.bootstrap:7900"
        cert_name: "seed-0-cert.json"
        role: "heavy_material"
        keys_file: "/opt/insolar/config/nodes/seed-0/keys.json"
      -
        host: "seed-1.bootstrap:7900"
        cert_name: "seed-1-cert.json"
        role: "virtual"
        keys_file: "/opt/insolar/config/nodes/seed-1/keys.json"
      -
        host: "seed-2.bootstrap:7900"
        cert_name: "seed-2-cert.json"
        role: "light_material"
        keys_file: "/opt/insolar/config/nodes/seed-2/keys.json"
      -
        host: "seed-3.bootstrap:7900"
        cert_name: "seed-3-cert.json"
        role: "virtual"
        keys_file: "/opt/insolar/config/nodes/seed-3/keys.json"
      -
        host: "seed-4.bootstrap:7900"
        cert_name: "seed-4-cert.json"
        role: "light_material"
        keys_file: "/opt/insolar/config/nodes/seed-4/keys.json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-config
data:
  insolar.yaml: |
      versionmanager:
        minalowedversion: v0.3.0
      host:
        transport:
          protocol: TCP
          address: 0.0.0.0:7900
          behindnat: false
        bootstraphosts: []
        isrelay: false
        infinitybootstrap: false
        timeout: 4
      service:
        service: {}
      ledger:
        storage:
          datadirectory: /opt/insolar/data
          txretriesonconflict: 3
        jetcoordinator:
          rolecounts:
            1: 1
            2: 1
            3: 1
            4: 1
            5: 1
      log:
        level: Debug
        adapter: zerolog
      stats:
        listenaddress: 0.0.0.0:8080
      logicrunner:
        rpclisten: 127.0.0.1:18182
        builtin: {}
        goplugin:
          runnerlisten: 127.0.0.1:18181
      apirunner:
        address: 127.0.0.1:19191
      pulsar:
        type: tcp
        listenaddress: 0.0.0.0:8090
        nodesaddresses: []
      keyspath: "/opt/insolar/config/node-keys.json"
      certificatepath: "/opt/insolar/config/node-cert.json"
      metrics:
        listenaddress: 0.0.0.0:8080
      tracer:
        jaeger:
          collectorendpoint: ""
          agentendpoint: jaeger-agent:6831
          probabilityrate: 1
        samplingrules: {}

---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: seed
  labels:
    app: bootstrap
spec:
  serviceName: bootstrap
  replicas: 5
  template:
    metadata:
      labels:
        app: bootstrap
    spec:
      nodeSelector:
        kubernetes.io/hostname: docker-for-desktop
      initContainers:
        - name: init-bootstrap
          imagePullPolicy: Never
          image: "base"
          tty: true
          stdin: true
          command:
            - /bin/sh
            - -ec
            - |
              # first run check
              ls -alhR /opt
              if [ "$HOSTNAME" = seed-0 ]; then
                 echo generate bootstrap key
                 insolar -c gen_keys > /opt/insolar/config/bootstrap_keys.json
                 echo generate root member key
                 insolar -c gen_keys > /opt/insolar/config/root_member_keys.json
                 echo generate discovery node keys
                 mkdir -p /opt/insolar/config/nodes/seed-0
                 mkdir -p /opt/insolar/config/nodes/seed-1
                 mkdir -p /opt/insolar/config/nodes/seed-2
                 mkdir -p /opt/insolar/config/nodes/seed-3
                 mkdir -p /opt/insolar/config/nodes/seed-4
                 insolar -c gen_keys > /opt/insolar/config/nodes/seed-0/keys.json
                 insolar -c gen_keys > /opt/insolar/config/nodes/seed-1/keys.json
                 insolar -c gen_keys > /opt/insolar/config/nodes/seed-2/keys.json
                 insolar -c gen_keys > /opt/insolar/config/nodes/seed-3/keys.json
                 insolar -c gen_keys > /opt/insolar/config/nodes/seed-4/keys.json
                 echo generate genesis
                 mkdir -p /opt/insolar/config/nodes/certs
                 mkdir -p /opt/insolar/config/data
                 insolard --config /opt/insolar/config/insolar.yaml --genesis /opt/insolar/config/genesis.yaml --keyout /opt/insolar/config/nodes/certs
                 touch /opt/insolar/config/finished
              else
                 while ! (/usr/bin/test -a /opt/insolar/config/finished);do
                  sleep 5s
                 done
              fi

              echo next step
              if [ -f /opt/work/config/node-cert.json ]; then
                 echo skip work
              else
                 echo copy genesis
                 cp -R /opt/insolar/config/data /opt/work/
                 mkdir -p /opt/work/config
                 cp /opt/insolar/config/nodes/certs/$(ls /opt/insolar/config/nodes/certs/ | grep $(hostname | sed 's/[^0-9]*//g')) /opt/work/config/node-cert.json
                 cp /opt/insolar/config/nodes/$(hostname)/keys.json /opt/work/config/node-keys.json
              fi
          env:
            - name: HOME
              value: /opt/insolar
            - name: INSOLAR_LEDGER_STORAGE_DATADIRECTORY
              value: "/opt/insolar/config/data"
          volumeMounts:
            - name: bootstrap-config
              mountPath: /opt/insolar/config
            - name: code
              mountPath: /tmp/code
            - name: seed-config
              mountPath: /opt/insolar/config/insolar.yaml
              subPath: insolar.yaml
            - name: seed-config
              mountPath: /opt/insolar/config/genesis.yaml
              subPath: genesis.yaml
            - name: work
              mountPath: /opt/work
      containers:
        - name: insgorund
          imagePullPolicy: Never
          image: "base"
          workingDir: "/opt/insolar"
          tty: true
          stdin: true
          command:
            - bash
            - -c
            - "/go/bin/insgorund -l 127.0.0.1:18181 --rpc 127.0.0.1:18182 -d /tmp/code > /logs/$(POD_NAME).insgorund.log 2>&1"
          env:
            - name: HOME
              value: /opt/insolar
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
          volumeMounts:
            - name: work
              mountPath: /opt/insolar
            - name: code
              mountPath: /tmp/code
            - name: node-log
              mountPath: /logs
        - name: insolard
          imagePullPolicy: Never
          image: "base"
          workingDir: "/opt/insolar"
          tty: true
          stdin: true
          command:
          - bash
          - -c
          - "/go/bin/insolard --config /opt/insolar/config/node-insolar.yaml --trace > /logs/$(POD_NAME).insolard.log 2>&1"
          env:
            - name: HOME
              value: /opt/insolar
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: INSOLAR_HOST_TRANSPORT_ADDRESS
              value: "$(POD_IP):7900"
            - name: INSOLAR_APIRUNNER_ADDRESS
              value: "$(POD_IP):19191"
          volumeMounts:
            - name: work
              mountPath: /opt/insolar
            - name: bootstrap-config
              mountPath: /opt/bootstrap-config
            - name: code
              mountPath: /tmp/code
            - name: node-config
              mountPath: /opt/insolar/config/node-insolar.yaml
              subPath: insolar.yaml
            - name: node-log
              mountPath: /logs
      volumes:
      - name: bootstrap-config
        persistentVolumeClaim:
          claimName: bootstrap-config
      - name: code
        emptyDir: {}
      - name: seed-config
        configMap:
          name: seed-config
      - name: node-config
        configMap:
          name: node-config
      - name: work
        emptyDir: {}
      - name: node-log
        hostPath:
          path: /tmp/insolar_logs/
          type: DirectoryOrCreate
  updateStrategy:
    type: OnDelete
  podManagementPolicy: Parallel
