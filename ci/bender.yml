
resource_types:
- name: smuggler
  type: docker-image
  source:
    repository: redfactorlabs/concourse-smuggler-resource
    tag: alpine
- name: concourse-pipeline
  type: docker-image
  source:
    repository: chemist/concourse-pipeline-resource

resources:
- name: branches
  type: smuggler
  source:
    smuggler_debug: true
    target_file: branches.json
    commands:
      check: |
        curl https://api.github.com/repos/insolar/insolar/branches | jq -c '{ "branches": [.[] | .name]} ' | md5sum > ${SMUGGLER_OUTPUT_DIR}/versions
      in: |
        curl https://api.github.com/repos/insolar/insolar/branches | jq -c '{ "branches": [.[] | .name]} ' > ${SMUGGLER_DESTINATION_DIR}/${SMUGGLER_target_file}
        echo "date=$(date)" > ${SMUGGLER_OUTPUT_DIR}/metadata
        curl https://api.github.com/repos/insolar/insolar/branches | jq -c '{ "branches": [.[] | .name]} ' >> ${SMUGGLER_OUTPUT_DIR}/metadata

- name: pull-requests
  webhook_token: helloinsolar
  type: smuggler
  source:
    smuggler_debug: true
    commands:
      check: |
        curl https://api.github.com/repos/((meta.github.owner))/((meta.github.repo))/pulls?access_token=((meta.github.access_token)) | jq -c '.[] | .url ' | md5sum > ${SMUGGLER_OUTPUT_DIR}/versions
      in: |
        curl https://api.github.com/repos/((meta.github.owner))/((meta.github.repo))/pulls?access_token=((meta.github.access_token)) | jq -c '{ "pulls": [.[] | {number: .number, title: .title} ]} '  > ${SMUGGLER_DESTINATION_DIR}/pulls.json

- name: deploy
  type: concourse-pipeline
  source:
    teams:
    - name: insolar
      username: ((meta.concourse.username))
      password: ((meta.concourse.password))

- name: insolar
  type: git
  source:
    uri: https://github.com/insolar/insolar.git
    branch: devops
    paths:
      - 'ci'

jobs:
- name: branches
  plan:
  - get: branches
    trigger: true
  - get: insolar
    trigger: false
  - task: generate_pipelines
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: chemist/alpine-jinja-cli
      inputs:
      - name: branches
      - name: insolar
      outputs:
      - name: pipelines
      run:
        path: sh
        args:
        - -ec
        - |
          echo Generate pipelines 
          echo "Input: $(cat branches/branches.json)"
          jinja2 insolar/ci/templates/insolar.yml.j2 branches/branches.json > pipelines/branches.yml
          echo "Output: "
          cat pipelines/branches.yml
  - put: deploy
    params:
      pipelines:
        - name: branches
          team: insolar
          config_file: pipelines/branches.yml

- name: pull-requests
  plan:
    - get: pull-requests
      trigger: true
    - get: insolar
      trigger: false
    - task: generate-pulls
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: chemist/alpine-jinja-cli
        inputs:
          - name: pull-requests
          - name: insolar
        outputs:
          - name: pipelines
        run:
          path: sh
          args:
            - -ec
            - |
              echo generate pull requests
              echo "Input: $(cat pull-requests/pulls.json)"
              jinja2 insolar/ci/templates/pull-requests.yml.j2 pull-requests/pulls.json > pipelines/pulls.yml
              echo "Output: "
              cat pipelines/pulls.yml
              echo hello
              cat << EOF > /pipelines/vars.yml
              ((meta.concourse.vars))
              EOF
    - put: deploy
      params:
        pipelines:
          - name: pull-requests
            team: insolar
            config_file: pipelines/pulls.yml
            vars_files:
              - pipelines/vars.yml

