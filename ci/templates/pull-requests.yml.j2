groups:
{% for pull in pulls %}
- name: {{ pull.number }}
  jobs:
    - unit-{{ pull.number }}
{% endfor %}

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: chemist/pull-request
      tag: latest

resources:
- name: master
  type: git
  source:
    uri: https://github.com/insolar/insolar.git

{% for pull in pulls %}
- name: pull-request-{{ pull.number }}
  type: pull-request
  source:
    owner: ((meta.github.owner))
    repo: ((meta.github.repo))
    access_token: ((meta.github.access_token))
    pull_request: {{ pull.number }}
    #ssh_key: ((meta.github.private_key))
{% endfor %}

jobs:
{% for pull in pulls %}
- name: unit-{{ pull.number }}
  public: true
  plan:
  - put: pull-request-{{ pull.number }}
    params:
      state: pending
  - get: master
    trigger: true
  - get: pull-request-{{ pull.number }}
    trigger: true
  - task: unit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: golang}
      inputs:
      - name: pull-request-{{ pull.number }}
        path: /go/src/github.com/insolar/insolar
      run:
        path: sh
        args:
          - -exc
          - |
             echo tests
             pwd
             ls -alh go
             export GOPATH=$(pwd)/go
             mkdir $GOPATH/bin
             export PATH=$PATH:$GOPATH/bin
             ls -alh
             env
             cd $GOPATH/src/github.com/insolar/insolar
             make install-deps
             make pre-build
             make build
             make test_with_coverage
             #make insolard insolar insgocc pulsard insgorund
             #echo "fetching dependencies..."
             #curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
             ##go get -t -d ./...
             #dep ensure
             #go test -v --race --coverprofile=coverage.txt --covermode=atomic ./...
    on_success:
      put: pull-request-{{ pull.number }}
      params:
        state: success
    on_failure:
      put: pull-request-{{ pull.number }}
      params:
        state: failure
{% endfor %}
